// Auto generated file, do not modify
// Run `python3 PopParse.py to regenerate

OP_DECL("popart::concatfromsequence", concatfromsequence, AiOnnxOpset11.concatfromsequence, ARG(INT,axis) ARG(INT,new_axis) , BODY_ARG(axis) BODY_ARG(new_axis) , NONE)
OP_DECL("popart::sequenceat", sequenceat, AiOnnxOpset11.sequenceat, NONE, NONE, NONE)
OP_DECL("popart::sequenceinsert", sequenceinsert, AiOnnxOpset11.sequenceinsert, NONE, NONE, NONE)
OP_DECL("popart::gathernd", gathernd, AiOnnxOpset11.gathernd, NONE, NONE, NONE)
OP_DECL("popart::scatternd", scatternd, AiOnnxOpset11.scatternd, NONE, NONE, NONE)
OP_DECL("popart::det", det, AiOnnxOpset11.det, NONE, NONE, NONE)
OP_DECL("popart::scatterelements", scatterelements, AiOnnxOpset11.scatterelements, ARG(INT,axis) , BODY_ARG(axis) , NONE)
OP_DECL("popart::gatherelements", gatherelements, AiOnnxOpset11.gatherelements, ARG(INT,axis) , BODY_ARG(axis) , NONE)
OP_DECL("popart::splittosequence", splittosequence, AiOnnxOpset11.splittosequence, ARG(INT,axis) ARG(INT,keepdims) , BODY_ARG(axis) BODY_ARG(keepdims) , NONE)
OP_DECL("popart::dynamicquantizelinear", dynamicquantizelinear, AiOnnxOpset11.dynamicquantizelinear, NONE, NONE, [0])
OP_DECL("popart::round", round, AiOnnxOpset11.round, NONE, NONE, NONE)
OP_DECL("popart::cumsum", cumsum, AiOnnxOpset11.cumsum, ARG(INT,exclusive) ARG(INT,reverse) , BODY_ARG(exclusive) BODY_ARG(reverse) , NONE)
OP_DECL("popart::nonmaxsuppression", nonmaxsuppression, AiOnnxOpset11.nonmaxsuppression, ARG(INT,center_point_box) , BODY_ARG(center_point_box) , NONE)
OP_DECL("popart::range", range, AiOnnxOpset11.range, NONE, NONE, NONE)
OP_DECL("popart::sequenceerase", sequenceerase, AiOnnxOpset11.sequenceerase, NONE, NONE, NONE)
OP_DECL("popart::scatter", scatter, AiOnnxOpset11.scatter, ARG(INT,axis) , BODY_ARG(axis) , NONE)
OP_DECL("popart::onehot", onehot, AiOnnxOpset11.onehot, ARG(INT,axis) , BODY_ARG(axis) , NONE)
OP_DECL("popart::maxunpool", maxunpool, AiOnnxOpset11.maxunpool, ARG(INT_VEC,kernel_shape) ARG(INT_VEC,pads) ARG(INT_VEC,strides) , BODY_ARG(kernel_shape) BODY_ARG(pads) BODY_ARG(strides) , NONE)
OP_DECL("popart::reducesumsquare", reducesumsquare, AiOnnxOpset11.reducesumsquare, ARG(INT_VEC,axes) ARG(INT,keepdims) , BODY_ARG(axes) BODY_ARG(keepdims) , NONE)
OP_DECL("popart::squeeze", squeeze, AiOnnxOpset11.squeeze, ARG(INT_VEC,axes) , BODY_ARG(axes) , NONE)
OP_DECL("popart::reducelogsum", reducelogsum, AiOnnxOpset11.reducelogsum, ARG(INT_VEC,axes) ARG(INT,keepdims) , BODY_ARG(axes) BODY_ARG(keepdims) , NONE)
OP_DECL("popart::split", split, AiOnnxOpset11.split, ARG(INT,num_outputs) ARG(INT,axis) ARG(INT_VEC,split) , BODY_ARG(num_outputs) BODY_ARG(axis) BODY_ARG(split) , [0])
OP_DECL("popart::softmax", softmax, AiOnnxOpset11.softmax, ARG(INT,axis) , BODY_ARG(axis) , NONE)
OP_DECL("popart::sequencelength", sequencelength, AiOnnxOpset11.sequencelength, NONE, NONE, NONE)
OP_DECL("popart::reducemin", reducemin, AiOnnxOpset11.reducemin, ARG(INT_VEC,axes) ARG(INT,keepdims) , BODY_ARG(axes) BODY_ARG(keepdims) , NONE)
OP_DECL("popart::reducel1", reducel1, AiOnnxOpset11.reducel1, ARG(INT_VEC,axes) ARG(INT,keepdims) , BODY_ARG(axes) BODY_ARG(keepdims) , NONE)
OP_DECL("popart::slice", slice, AiOnnxOpset11.slice, NONE, NONE, NONE)
OP_DECL("popart::reducelogsumexp", reducelogsumexp, AiOnnxOpset11.reducelogsumexp, ARG(INT_VEC,axes) ARG(INT,keepdims) , BODY_ARG(axes) BODY_ARG(keepdims) , NONE)
OP_DECL("popart::reducel2", reducel2, AiOnnxOpset11.reducel2, ARG(INT_VEC,axes) ARG(INT,keepdims) , BODY_ARG(axes) BODY_ARG(keepdims) , NONE)
OP_DECL("popart::flatten", flatten, AiOnnxOpset11.flatten, ARG(INT,axis) , BODY_ARG(axis) , NONE)
OP_DECL("popart::conv", conv, AiOnnxOpset11.conv, ARG(INT_VEC,dilations) ARG(INT,group) ARG(INT_VEC,kernel_shape) ARG(INT_VEC,pads) ARG(INT_VEC,strides) , BODY_ARG(dilations) BODY_ARG(group) BODY_ARG(kernel_shape) BODY_ARG(pads) BODY_ARG(strides) , NONE)
OP_DECL("popart::lppool", lppool, AiOnnxOpset11.lppool, ARG(INT_VEC,kernel_shape) ARG(INT,p) ARG(INT_VEC,pads) ARG(INT_VEC,strides) , BODY_ARG(kernel_shape) BODY_ARG(p) BODY_ARG(pads) BODY_ARG(strides) , NONE)
OP_DECL("popart::reducemax", reducemax, AiOnnxOpset11.reducemax, ARG(INT_VEC,axes) ARG(INT,keepdims) , BODY_ARG(axes) BODY_ARG(keepdims) , NONE)
OP_DECL("popart::unsqueeze", unsqueeze, AiOnnxOpset11.unsqueeze, ARG(INT_VEC,axes) , BODY_ARG(axes) , NONE)
OP_DECL("popart::topk", topk, AiOnnxOpset11.topk, ARG(INT,axis) ARG(INT,largest) ARG(INT,sorted) , BODY_ARG(axis) BODY_ARG(largest) BODY_ARG(sorted) , [0])
OP_DECL("popart::argmax", argmax, AiOnnxOpset11.argmax, ARG(INT,axis) ARG(INT,keepdims) , BODY_ARG(axis) BODY_ARG(keepdims) , NONE)
OP_DECL("popart::concat", concat, AiOnnxOpset11.concat, ARG(INT,axis) , BODY_ARG(axis) , NONE)
OP_DECL("popart::clip", clip, AiOnnxOpset11.clip, NONE, NONE, NONE)
OP_DECL("popart::reduceprod", reduceprod, AiOnnxOpset11.reduceprod, ARG(INT_VEC,axes) ARG(INT,keepdims) , BODY_ARG(axes) BODY_ARG(keepdims) , NONE)
OP_DECL("popart::gather", gather, AiOnnxOpset11.gather, ARG(INT,axis) , BODY_ARG(axis) , NONE)
OP_DECL("popart::sequenceconstruct", sequenceconstruct, AiOnnxOpset11.sequenceconstruct, NONE, NONE, NONE)
OP_DECL("popart::argmin", argmin, AiOnnxOpset11.argmin, ARG(INT,axis) ARG(INT,keepdims) , BODY_ARG(axis) BODY_ARG(keepdims) , NONE)
OP_DECL("popart::equal", equal, AiOnnxOpset11.equal, NONE, NONE, NONE)
OP_DECL("popart::reducesum", reducesum, AiOnnxOpset11.reducesum, ARG(INT_VEC,axes) ARG(INT,keepdims) , BODY_ARG(axes) BODY_ARG(keepdims) , NONE)
OP_DECL("popart::maxpool", maxpool, AiOnnxOpset11.maxpool, ARG(INT,num_outputs) ARG(INT_VEC,kernel_shape) ARG(INT,ceil_mode) ARG(INT_VEC,dilations) ARG(INT_VEC,pads) ARG(INT,storage_order) ARG(INT_VEC,strides) , BODY_ARG(num_outputs) BODY_ARG(kernel_shape) BODY_ARG(ceil_mode) BODY_ARG(dilations) BODY_ARG(pads) BODY_ARG(storage_order) BODY_ARG(strides) , [0])
OP_DECL("popart::reducemean", reducemean, AiOnnxOpset11.reducemean, ARG(INT_VEC,axes) ARG(INT,keepdims) , BODY_ARG(axes) BODY_ARG(keepdims) , NONE)
OP_DECL("popart::logsoftmax", logsoftmax, AiOnnxOpset11.logsoftmax, ARG(INT,axis) , BODY_ARG(axis) , NONE)
OP_DECL("popart::averagepool", averagepool, AiOnnxOpset11.averagepool, ARG(INT_VEC,kernel_shape) ARG(INT,ceil_mode) ARG(INT,count_include_pad) ARG(INT_VEC,pads) ARG(INT_VEC,strides) , BODY_ARG(kernel_shape) BODY_ARG(ceil_mode) BODY_ARG(count_include_pad) BODY_ARG(pads) BODY_ARG(strides) , NONE)
OP_DECL("popart::hardmax", hardmax, AiOnnxOpset11.hardmax, ARG(INT,axis) , BODY_ARG(axis) , NONE)
OP_DECL("popart::convtranspose", convtranspose, AiOnnxOpset11.convtranspose, ARG(INT_VEC,dilations) ARG(INT,group) ARG(INT_VEC,kernel_shape) ARG(INT_VEC,output_padding) ARG(INT_VEC,output_shape) ARG(INT_VEC,pads) ARG(INT_VEC,strides) , BODY_ARG(dilations) BODY_ARG(group) BODY_ARG(kernel_shape) BODY_ARG(output_padding) BODY_ARG(output_shape) BODY_ARG(pads) BODY_ARG(strides) , NONE)
OP_DECL("popart::gemm", gemm, AiOnnxOpset11.gemm, ARG(FLOAT,alpha) ARG(FLOAT,beta) ARG(INT,transA) ARG(INT,transB) , BODY_ARG(alpha) BODY_ARG(beta) BODY_ARG(transA) BODY_ARG(transB) , NONE)
OP_DECL("popart::reversesequence", reversesequence, AiOnnxOpset11.reversesequence, ARG(INT,batch_axis) ARG(INT,time_axis) , BODY_ARG(batch_axis) BODY_ARG(time_axis) , NONE)
OP_DECL("popart::isinf", isinf, AiOnnxOpset11.isinf, ARG(INT,detect_negative) ARG(INT,detect_positive) , BODY_ARG(detect_negative) BODY_ARG(detect_positive) , NONE)
OP_DECL("popart::quantizelinear", quantizelinear, AiOnnxOpset11.quantizelinear, NONE, NONE, NONE)
OP_DECL("popart::qlinearconv", qlinearconv, AiOnnxOpset11.qlinearconv, ARG(INT_VEC,dilations) ARG(INT,group) ARG(INT_VEC,kernel_shape) ARG(INT_VEC,pads) ARG(INT_VEC,strides) , BODY_ARG(dilations) BODY_ARG(group) BODY_ARG(kernel_shape) BODY_ARG(pads) BODY_ARG(strides) , NONE)
OP_DECL("popart::convinteger", convinteger, AiOnnxOpset11.convinteger, ARG(INT_VEC,dilations) ARG(INT,group) ARG(INT_VEC,kernel_shape) ARG(INT_VEC,pads) ARG(INT_VEC,strides) , BODY_ARG(dilations) BODY_ARG(group) BODY_ARG(kernel_shape) BODY_ARG(pads) BODY_ARG(strides) , NONE)
OP_DECL("popart::qlinearmatmul", qlinearmatmul, AiOnnxOpset11.qlinearmatmul, NONE, NONE, NONE)
OP_DECL("popart::matmulinteger", matmulinteger, AiOnnxOpset11.matmulinteger, NONE, NONE, NONE)
OP_DECL("popart::mod", mod, AiOnnxOpset11.mod, ARG(INT,fmod) , BODY_ARG(fmod) , NONE)
OP_DECL("popart::dequantizelinear", dequantizelinear, AiOnnxOpset11.dequantizelinear, NONE, NONE, NONE)
OP_DECL("popart::thresholdedrelu", thresholdedrelu, AiOnnxOpset11.thresholdedrelu, ARG(FLOAT,alpha) , BODY_ARG(alpha) , NONE)
OP_DECL("popart::dropout", dropout, AiOnnxOpset11.dropout, ARG(INT,num_outputs) ARG(FLOAT,ratio) , BODY_ARG(num_outputs) BODY_ARG(ratio) , [0])
OP_DECL("popart::meanvariancenormalization", meanvariancenormalization, AiOnnxOpset11.meanvariancenormalization, ARG(INT_VEC,axes) , BODY_ARG(axes) , NONE)
OP_DECL("popart::nonzero", nonzero, AiOnnxOpset11.nonzero, NONE, NONE, NONE)
OP_DECL("popart::sign", sign, AiOnnxOpset11.sign, NONE, NONE, NONE)
OP_DECL("popart::isnan", isnan, AiOnnxOpset11.isnan, NONE, NONE, NONE)
OP_DECL("popart::shrink", shrink, AiOnnxOpset11.shrink, ARG(FLOAT,bias) ARG(FLOAT,lambd) , BODY_ARG(bias) BODY_ARG(lambd) , NONE)
OP_DECL("popart::sinh", sinh, AiOnnxOpset11.sinh, NONE, NONE, NONE)
OP_DECL("popart::acosh", acosh, AiOnnxOpset11.acosh, NONE, NONE, NONE)
OP_DECL("popart::where", where, AiOnnxOpset11.where, NONE, NONE, NONE)
OP_DECL("popart::erf", erf, AiOnnxOpset11.erf, NONE, NONE, NONE)
OP_DECL("popart::asinh", asinh, AiOnnxOpset11.asinh, NONE, NONE, NONE)
OP_DECL("popart::greater", greater, AiOnnxOpset11.greater, NONE, NONE, NONE)
OP_DECL("popart::batchnormalization", batchnormalization, AiOnnxOpset11.batchnormalization, ARG(INT,num_outputs) ARG(FLOAT,epsilon) ARG(FLOAT,momentum) , BODY_ARG(num_outputs) BODY_ARG(epsilon) BODY_ARG(momentum) , [0])
OP_DECL("popart::cosh", cosh, AiOnnxOpset11.cosh, NONE, NONE, NONE)
OP_DECL("popart::prelu", prelu, AiOnnxOpset11.prelu, NONE, NONE, NONE)
OP_DECL("popart::atanh", atanh, AiOnnxOpset11.atanh, NONE, NONE, NONE)
OP_DECL("popart::matmul", matmul, AiOnnxOpset11.matmul, NONE, NONE, NONE)
OP_DECL("popart::less", less, AiOnnxOpset11.less, NONE, NONE, NONE)
OP_DECL("popart::expand", expand, AiOnnxOpset11.expand, NONE, NONE, NONE)
OP_DECL("popart::max", max, AiOnnxOpset11.max, NONE, NONE, NONE)
OP_DECL("popart::sum", sum, AiOnnxOpset11.sum, NONE, NONE, NONE)
OP_DECL("popart::mean", mean, AiOnnxOpset11.mean, NONE, NONE, NONE)
OP_DECL("popart::min", min, AiOnnxOpset11.min, NONE, NONE, NONE)
OP_DECL("popart::asin", asin, AiOnnxOpset11.asin, NONE, NONE, NONE)
OP_DECL("popart::logical_xor", logical_xor, AiOnnxOpset11.logical_xor, NONE, NONE, NONE)
OP_DECL("popart::logical_and", logical_and, AiOnnxOpset11.logical_and, NONE, NONE, NONE)
OP_DECL("popart::sub", sub, AiOnnxOpset11.sub, NONE, NONE, NONE)
OP_DECL("popart::cos", cos, AiOnnxOpset11.cos, NONE, NONE, NONE)
OP_DECL("popart::mul", mul, AiOnnxOpset11.mul, NONE, NONE, NONE)
OP_DECL("popart::sin", sin, AiOnnxOpset11.sin, NONE, NONE, NONE)
OP_DECL("popart::logical_or", logical_or, AiOnnxOpset11.logical_or, NONE, NONE, NONE)
OP_DECL("popart::acos", acos, AiOnnxOpset11.acos, NONE, NONE, NONE)
OP_DECL("popart::tan", tan, AiOnnxOpset11.tan, NONE, NONE, NONE)
OP_DECL("popart::add", add, AiOnnxOpset11.add, NONE, NONE, NONE)
OP_DECL("popart::pow", pow, AiOnnxOpset11.pow, NONE, NONE, NONE)
OP_DECL("popart::div", div, AiOnnxOpset11.div, NONE, NONE, NONE)
OP_DECL("popart::atan", atan, AiOnnxOpset11.atan, NONE, NONE, NONE)
OP_DECL("popart::floor", floor, AiOnnxOpset11.floor, NONE, NONE, NONE)
OP_DECL("popart::tile", tile, AiOnnxOpset11.tile, NONE, NONE, NONE)
OP_DECL("popart::sqrt", sqrt, AiOnnxOpset11.sqrt, NONE, NONE, NONE)
OP_DECL("popart::softsign", softsign, AiOnnxOpset11.softsign, NONE, NONE, NONE)
OP_DECL("popart::softplus", softplus, AiOnnxOpset11.softplus, NONE, NONE, NONE)
OP_DECL("popart::spacetodepth", spacetodepth, AiOnnxOpset11.spacetodepth, ARG(INT,blocksize) , BODY_ARG(blocksize) , NONE)
OP_DECL("popart::size", size, AiOnnxOpset11.size, NONE, NONE, NONE)
OP_DECL("popart::tanh", tanh, AiOnnxOpset11.tanh, NONE, NONE, NONE)
OP_DECL("popart::transpose", transpose, AiOnnxOpset11.transpose, ARG(INT_VEC,perm) , BODY_ARG(perm) , NONE)
OP_DECL("popart::shape", shape, AiOnnxOpset11.shape, NONE, NONE, NONE)
OP_DECL("popart::selu", selu, AiOnnxOpset11.selu, ARG(FLOAT,alpha) ARG(FLOAT,gamma) , BODY_ARG(alpha) BODY_ARG(gamma) , NONE)
OP_DECL("popart::relu", relu, AiOnnxOpset11.relu, NONE, NONE, NONE)
OP_DECL("popart::reciprocal", reciprocal, AiOnnxOpset11.reciprocal, NONE, NONE, NONE)
OP_DECL("popart::sigmoid", sigmoid, AiOnnxOpset11.sigmoid, NONE, NONE, NONE)
OP_DECL("popart::neg", neg, AiOnnxOpset11.neg, NONE, NONE, NONE)
OP_DECL("popart::reshape", reshape, AiOnnxOpset11.reshape, NONE, NONE, NONE)
OP_DECL("popart::globalmaxpool", globalmaxpool, AiOnnxOpset11.globalmaxpool, NONE, NONE, NONE)
OP_DECL("popart::log", log, AiOnnxOpset11.log, NONE, NONE, NONE)
OP_DECL("popart::leakyrelu", leakyrelu, AiOnnxOpset11.leakyrelu, ARG(FLOAT,alpha) , BODY_ARG(alpha) , NONE)
OP_DECL("popart::logical_not", logical_not, AiOnnxOpset11.logical_not, NONE, NONE, NONE)
OP_DECL("popart::lrn", lrn, AiOnnxOpset11.lrn, ARG(INT,size) ARG(FLOAT,alpha) ARG(FLOAT,beta) ARG(FLOAT,bias) , BODY_ARG(size) BODY_ARG(alpha) BODY_ARG(beta) BODY_ARG(bias) , NONE)
OP_DECL("popart::instancenormalization", instancenormalization, AiOnnxOpset11.instancenormalization, ARG(FLOAT,epsilon) , BODY_ARG(epsilon) , NONE)
OP_DECL("popart::maxroipool", maxroipool, AiOnnxOpset11.maxroipool, ARG(INT_VEC,pooled_shape) ARG(FLOAT,spatial_scale) , BODY_ARG(pooled_shape) BODY_ARG(spatial_scale) , NONE)
OP_DECL("popart::identity", identity, AiOnnxOpset11.identity, NONE, NONE, NONE)
OP_DECL("popart::hardsigmoid", hardsigmoid, AiOnnxOpset11.hardsigmoid, ARG(FLOAT,alpha) ARG(FLOAT,beta) , BODY_ARG(alpha) BODY_ARG(beta) , NONE)
OP_DECL("popart::globallppool", globallppool, AiOnnxOpset11.globallppool, ARG(INT,p) , BODY_ARG(p) , NONE)
OP_DECL("popart::elu", elu, AiOnnxOpset11.elu, ARG(FLOAT,alpha) , BODY_ARG(alpha) , NONE)
OP_DECL("popart::globalaveragepool", globalaveragepool, AiOnnxOpset11.globalaveragepool, NONE, NONE, NONE)
OP_DECL("popart::exp", exp, AiOnnxOpset11.exp, NONE, NONE, NONE)
OP_DECL("popart::ceil", ceil, AiOnnxOpset11.ceil, NONE, NONE, NONE)
OP_DECL("popart::abs", abs, AiOnnxOpset11.abs, NONE, NONE, NONE)
OP_DECL("popart::lpnormalization", lpnormalization, AiOnnxOpset11.lpnormalization, ARG(INT,axis) ARG(INT,p) , BODY_ARG(axis) BODY_ARG(p) , NONE)

